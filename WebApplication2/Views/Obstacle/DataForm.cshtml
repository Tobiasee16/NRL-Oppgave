@model WebApplication2.Models.ObstacleData
@{
    Layout = null;
    ViewData["Title"] = "Obstacle Registration";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Tailwind -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Leaflet & Leaflet Draw -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-draw@1.0.4/dist/leaflet.draw.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-draw@1.0.4/dist/leaflet.draw.js"></script>

    <title>@ViewData["Title"]</title>
    <style>
        #map {
            height: 420px;
        }</style>
</head>

<body class="min-h-screen bg-gray-50 text-gray-900">
    <main class="mx-auto max-w-3xl px-4 py-10">
        <div class="rounded-2xl border border-gray-200 bg-white shadow-sm">
            <div class="px-6 py-5 border-b border-gray-100">
                <h1 class="text-2xl font-semibold tracking-tight">Obstacle Registration</h1>
                <p class="mt-1 text-sm text-gray-600">Click or draw on the map to set location.</p>
            </div>

            <form asp-action="DataForm" method="post" class="px-6 py-6 space-y-6">
                @Html.AntiForgeryToken()

                <!-- Validation summary -->
                <div asp-validation-summary="ModelOnly"
                     class="text-sm text-red-700 bg-red-50 border border-red-200 rounded-md px-3 py-2"
                     data-valmsg-summary="true"></div>

                <!-- Name -->
                <div class="space-y-1">
                    <label asp-for="ObstacleName" class="block text-sm font-medium text-gray-800">Obstacle name</label>
                    <input asp-for="ObstacleName"
                           placeholder="e.g., Fallen tree"
                           class="w-full rounded-lg border border-gray-300 bg-white px-3 py-2
                                  placeholder:text-gray-400 shadow-sm
                                  focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500" />
                    <span asp-validation-for="ObstacleName" class="text-sm text-red-600"></span>
                </div>

                <!-- Height -->
                <div class="space-y-1">
                    <label asp-for="ObstacleHeight" class="block text-sm font-medium text-gray-800">Obstacle height</label>
                    <div class="flex">
                        <input asp-for="ObstacleHeight"
                               type="number" min="0" step="0.01"
                               placeholder="e.g., 1.75"
                               class="w-full rounded-l-lg border border-gray-300 bg-white px-3 py-2
                                      placeholder:text-gray-400 shadow-sm
                                      focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500" />
                        <span class="inline-flex items-center rounded-r-lg border border-l-0 border-gray-300 bg-gray-50 px-3 text-gray-600">m</span>
                    </div>
                    <p class="text-xs text-gray-500">Enter height in meters. Min 0, decimals allowed.</p>
                    <span asp-validation-for="ObstacleHeight" class="text-sm text-red-600"></span>
                </div>

                <!-- Description -->
                <div class="space-y-1">
                    <label asp-for="ObstacleDescription" class="block text-sm font-medium text-gray-800">Description</label>
                    <textarea asp-for="ObstacleDescription" id="obstacleDesc" rows="4" maxlength="2000"
                              placeholder="Short description..."
                              class="w-full rounded-lg border border-gray-300 bg-white px-3 py-2
                                     placeholder:text-gray-400 shadow-sm
                                     focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500"></textarea>
                    <div class="flex justify-between text-xs text-gray-500">
                        <span>Max 2000 characters.</span>
                        <span id="descCounter">2000 characters remaining</span>
                    </div>
                    <span asp-validation-for="ObstacleDescription" class="text-sm text-red-600"></span>
                </div>

                <!-- Map -->
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-800">Select location/area on map</label>
                    <div id="map" class="rounded-xl shadow border"></div>
                    <input type="hidden" asp-for="GeometryGeoJson" id="geojson" />
                    <span asp-validation-for="GeometryGeoJson" class="text-sm text-red-600"></span>
                </div>

                <!-- Coordinates (auto-filled) -->
                <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div>
                        <label asp-for="Latitude" class="block text-sm font-medium text-gray-800">Latitude</label>
                        <input asp-for="Latitude" id="lat"
                               class="w-full rounded-lg border border-gray-300 bg-gray-50 px-3 py-2 text-gray-700 shadow-sm"
                               readonly />
                    </div>
                    <div>
                        <label asp-for="Longitude" class="block text-sm font-medium text-gray-800">Longitude</label>
                        <input asp-for="Longitude" id="lng"
                               class="w-full rounded-lg border border-gray-300 bg-gray-50 px-3 py-2 text-gray-700 shadow-sm"
                               readonly />
                    </div>
                </div>

                <!-- Buttons -->
                <div class="flex flex-col sm:flex-row gap-3 pt-2">
                    <button type="submit"
                            class="inline-flex justify-center rounded-lg bg-blue-600 px-5 py-2.5 text-white font-medium
                                   shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500/50">
                        Submit data
                    </button>
                    <a asp-action="Index" asp-controller="Home"
                       class="inline-flex justify-center rounded-lg border border-gray-300 px-5 py-2.5 text-gray-800
                              hover:bg-gray-50">
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </main>

    <!-- Validation -->
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Description counter
        (function () {
            const ta = document.getElementById('obstacleDesc');
            const counter = document.getElementById('descCounter');
            if (!ta || !counter) return;
            const max = parseInt(ta.getAttribute('maxlength') || '2000', 10);
            function updateCounter() {
                const remaining = Math.max(0, max - ta.value.length);
                counter.textContent = remaining + ' characters remaining';
            }
            ta.addEventListener('input', updateCounter);
            updateCounter();
        })();

        // Initialize map (Norway-centered)
        const map = L.map('map').setView([63.4, 10.4], 6);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        const drawnItems = new L.FeatureGroup().addTo(map);

        const drawControl = new L.Control.Draw({
            position: 'topleft',
            draw: {
                polygon: true,
                polyline: true,
                rectangle: true,
                marker: true,
                circle: false,
                circlemarker: false
            },
            edit: { featureGroup: drawnItems, remove: true }
        });
        map.addControl(drawControl);

        function setLatLngFromLayer(layer) {
            let lat = null, lng = null;
            if (typeof layer.getLatLng === 'function') {
                const ll = layer.getLatLng();
                lat = ll.lat; lng = ll.lng;
            } else if (typeof layer.getBounds === 'function') {
                const center = layer.getBounds().getCenter();
                lat = center.lat; lng = center.lng;
            }
            if (lat !== null && lng !== null) {
                document.getElementById('lat').value = lat.toFixed(6);
                document.getElementById('lng').value = lng.toFixed(6);
            }
        }

        function syncGeoJsonInput() {
            const fc = { type: "FeatureCollection", features: [] };
            let lastLayer = null;
            drawnItems.eachLayer(layer => {
                try {
                    fc.features.push(layer.toGeoJSON());
                    lastLayer = layer;
                } catch { }
            });
            document.getElementById('geojson').value = JSON.stringify(fc);
            if (lastLayer) setLatLngFromLayer(lastLayer);
        }

        map.on(L.Draw.Event.CREATED, e => { drawnItems.addLayer(e.layer); syncGeoJsonInput(); });
        map.on(L.Draw.Event.EDITED, () => { syncGeoJsonInput(); });
        map.on(L.Draw.Event.DELETED, () => { syncGeoJsonInput(); });

        (function restoreIfAny() {
            const raw = document.getElementById('geojson').value;
            if (!raw) return;
            try {
                const gj = JSON.parse(raw);
                const group = L.geoJSON(gj);
                group.eachLayer(l => drawnItems.addLayer(l));
                try {
                    const bounds = group.getBounds();
                    if (bounds && bounds.isValid()) map.fitBounds(bounds, { padding: [20, 20] });
                } catch { }
                let last = null;
                group.eachLayer(l => last = l);
                if (last) setLatLngFromLayer(last);
            } catch { }
        })();
    </script>
</body>
</html>
